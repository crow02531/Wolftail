buildscript {
    repositories {
        maven { url = 'https://files.minecraftforge.net/maven' }
        jcenter()
        mavenCentral()
    }

    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:3.+'
        classpath 'org.spongepowered:mixingradle:0.7.+'
    }
}

apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'org.spongepowered.mixin'

apply plugin: 'eclipse'
apply plugin: 'idea'

group = 'net.wolftail'
archivesBaseName = 'wolftail-1.12.2'
version = '0.3.0-SNAPSHOT'

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8'

minecraft {
    mappings channel: 'snapshot', version: '20171003-1.12'

    runs {
        client {
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'

            arg '-torg.spongepowered.asm.launch.MixinTweaker'
            arg '-username=Player001'
        }

        server {
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'

            arg '-torg.spongepowered.asm.launch.MixinTweaker'
        }
    }
}

dependencies {
    minecraft 'net.minecraftforge:forge:1.12.2-14.23.5.2855'
    implementation 'org.spongepowered:mixin:0.8.2'

    annotationProcessor 'org.spongepowered:mixin:0.8.2:processor'
}

mixin {
    add sourceSets.main, 'mixins.wolftail.refmap.json'

    config 'mixins.wolftail.core.json'
    config 'mixins.wolftail.renderer.json'
    config 'mixins.wolftail.tracker.json'
}

jar {
    manifest {
        attributes([
            "TweakClass": "org.spongepowered.asm.launch.MixinTweaker",
            "TweakOrder": "0",
            "ForceLoadAsMod": "true"
        ])
    }
}

import groovy.json.JsonOutput

processResources.doLast {
    fileTree(processResources.destinationDir).each {
        if(it.name.startsWith('mixins.') && it.name.endsWith('.json')) {
            def parsedJson = new groovy.json.JsonSlurper().parseText(it.text)
            parsedJson.put 'refmap', 'mixins.wolftail.refmap.json'
            it.text = JsonOutput.prettyPrint(JsonOutput.toJson(parsedJson))
        }
    }
}

jar.finalizedBy('reobfJar')
